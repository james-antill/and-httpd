#! /usr/bin/and-conf

  (org.and.daemon-conf-1.0
; Make daemon -- this is done from the init.d cmd line
    # daemonize on

    (logging "syslog"
       ; Remove LOG_ from man syslog ... or use LOCAL <num>
       facility DAEMON)

; Set default idle timeout...
    (policy <default>
      (limit connections 0) ; accept+close connections when this limit reached
                            ; 0 == no limit
       timeout idle 16)

; Listen on port/address, depending on uid
; The match-init uid/euid checks are performed _before_ drop-privs is done
    (match-init [! euid-eq 0
                 !  uid-eq 0]
      (listen
        max-connections 512 ; Stop accepting connections when this limit reached
        port 8008))
    (match-init [else]
      (rlimit file-descriptor-number 11_000)
      (listen
        max-connections 10_000 ; Should be enough, for anyone ?:]
        port 80)

      (drop-privs on
        username  and-httpd
        groupname and-httpd))

; Don't setup  pid-file or cntl-file as those are done from init.d too
#    pid-file and-httpd.pid
#    cntl-file and-httpd_cntl ; Allow simple shutdown

    procs <sysconf-number-processors-configured>)

; Now configure main HTTP policy...

(org.and.httpd-conf-main-1.0

   policy <default>

  ;; Directory names...
    (match-init [|| euid-eq 0
                     uid-eq 0]
      (match-init [false] ; chroot()
        org.and.daemon-conf-1.0
          chroot                            = HOME and-httpd /)
      (match-init [else]  ; No chroot()
        document-root                   ( = HOME and-httpd /)
        request-configuration-directory ( = HOME and-httpd /)
        request-error-directory           = HOME and-httpd /))

    document-root                     (+= html)
    request-configuration-directory   (+= conf)
    request-error-directory           (+= err)

  ; Change depending on if using vhosts.
  ;; Enable "simple" vhosts, so paths above become (doing reqs for example.com):
  ;;   <home>/html/example.com
  ;;   <home>/conf/example.com
  ;;   <home>/err/example.com
   (match-init [false] virtual-hosts on)

  ; Load the non-default mime/types
    MIME/types-filename-xtra /etc/and-httpd/mime_types_extra.txt

  ;; If you want to, you can change this to index etc.
  # directory-filename index.html

  ;; By default we don't redirect to directories that would just produce a
  ;; 404 anyway, this turns that off (saves a stat)
  # secure-directory-filename no
  ;; By default we redirect to files if they are asked for as a directory,
  ;; this turns that off (saves a stat)
  # redirect-filename-directory no

  ;; These are different from the defaults, 
  ;; but you probably don't want to change them
   (match-init [false]

     (policy <default> ; Give a false name in the Server: line
        HTTP Server: r"Apache/2.0.40 (Red Hat Linux\not)")

      HTTP
        ; Turn on workaround for moving from dynamic to static data
        url-remove-query    true  ; This removes the ?foo from index.html?foo
        ; Turn off fix for bad clients?
        url-remove-fragment false ; This removes the #foo from index.html#foo

        trace-op off) ; disable HTTP/1.1 TRACE operation

   (match-init [false]
  ;;  A 1 here means that we can specify a single byterange (the default),
  ;; putting > 1 means that number of multipart/byterange requests will also
  ;; be served.
  ;; NOTE: About the only thing that uses multipart/byterange is zsync.
      HTTP
        limit nodes Range: 128))

; === Authorization ===
; First create a new policy with authorization...
#  (policy auth []
#     HTTP ; generate token using: echo -n foo:bar | openssl enc -base64
#       auth basic-encoded realm 'Text in the auth dialog' token Zm9vOmJhcg==)
#          ; see token using: echo Zm9vOmJhcg== | openssl enc -d -base64 && echo
; This will enable authenticatiuon for all requests...
#  (match-connection []                                  policy auth)
; Or just for non-localhost requests...
#  (match-connection [! client-ipv4-cidr-eq 127.0.0.1/8] policy auth)
; Or just for non-localhost when run on a non-default port...
#  (match-connection [! client-ipv4-cidr-eq 127.0.0.1/8
#                     ! server-ipv4-port-eq 80]          policy auth)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Note that /etc/and-httpd/conf.d/*.conf will also be read via. init.d ;;
;; so that's an easy way to add specific configurations.                ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
